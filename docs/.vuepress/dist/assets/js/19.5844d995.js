(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{362:function(n,e,t){"use strict";t.r(e);var r=t(9),i=Object(r.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("p",[n._v("这篇文章是记录我在学习编译原理实验的时候遇到的一些问题以及自己的做法。记录一下自己踩过的坑！第一个题目比较简单，是基于 flex 构造词法分析器，只要掌握一些 flex 的基础就可以完成。\n"),n._v("\n在开始之前先分享一个我认为比较好的 flex 的教程，"),t("a",{attrs:{href:"https://cs.nju.edu.cn/daixinyu/1006.pdf",target:"_blank",rel:"noopener noreferrer"}},[n._v("南京大学-词法分析和语法分析课件"),t("OutboundLink")],1),n._v(" 这个课件可以说是科班学生做实验的时候的一份良好的材料了，里面不仅包含词法分析器所需要用到的 flex 教程，也包含后面语法分析所需要的 bison 教程，值得一读！")]),n._v(" "),t("p",[t("a",{attrs:{href:"https://sourceforge.net/projects/winflexbison/",target:"_blank",rel:"noopener noreferrer"}},[n._v("windows平台下flex下载地址"),t("OutboundLink")],1)]),n._v(" "),t("h2",{attrs:{id:"题目一"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#题目一","aria-hidden":"true"}},[n._v("#")]),n._v(" 题目一")]),n._v(" "),t("p",[n._v("【问题描述】设计c语言常见单词的正规式，编制lex源文件，利用flex编译得到词法分析的.c文件，继而对该文件编译得到词法分析器。")]),n._v(" "),t("p",[n._v("【输入形式】输入一段c语言程序")]),n._v(" "),t("p",[n._v("【输出形式】各类单词的token字，或者给出程序中的单词错误。")]),n._v(" "),t("p",[n._v("这次的实验算是简单一点的，只需要掌握一些 flex 的基本使用方法就可以完成。")]),n._v(" "),t("p",[n._v("代码详情：")]),n._v(" "),t("div",{staticClass:"language-lex extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('%option noyywrap\n%{\n    #include <stdio.h>\n    #include <stdlib.h>\n    #include <string.h>\n    int line=1;    \n    typedef struct Msg {\n        int line;\n        char token[100];\n        char word[100];\n        struct Msg* next;\n    }Msg, *pMsg;\n\n    pMsg m, p;\n    int error = 0;\n\n    void push(int line, const char* token, const char* word) {\n        pMsg tmp = (pMsg)malloc(sizeof(Msg));\n        tmp->line = line;\n        strcpy(tmp->token, token);\n        strcpy(tmp->word, word);\n        p->next = tmp;\n        p = p->next;\n    }\n%}\nDIGIT [0-9]\nOINTEGER [1-9]{DIGIT}*\nINTEGER ("+"|"-")?({OINTEGER}|0)\nDECIMAL {INTEGER}(.(0)*{OINTEGER})?\nFLOAT {DECIMAL}(e{INTEGER})\nLETTER [a-zA-Z]\nID ({LETTER}|_)({LETTER}|_|{DIGIT})*\nOPT ("+="|"-="|"*="|"/="|"+"|"-"|"*"|"/"|">="|"<="|"=="|"="|">"|"<")\nKEYWORD ("if"|"else"|"scanf"|"for"|"printf"|"return"|"sqrt"|"abs"|"main"|"float")\nTI [%|&]{LETTER}\nERROR_FLOAT {DIGIT}*.{DIGIT}{DIGIT}*e\n%%\n\\n {++line;}\n(void|int|double|short|char) {push(line, "type", yytext);}\n{INTEGER} {push(line, "integer", yytext);}\n{DECIMAL} {push(line, "decimal", yytext);}\n{FLOAT} {push(line, "float", yytext);}\n{ERROR_FLOAT} {error = 1; printf("Error at Line %d: Illegal floating point number \\"%s\\".\\n", line, yytext);}\n{KEYWORD} {push(line, "keyword", yytext);}\n{ID} {push(line, "identify", yytext);}\n("("|")"|"{"|"}"|"["|"]"|"\\""|","|";") {push(line, "bracket", yytext);}\n{OPT} {push(line, "OPT", yytext);}\n{TI} {push(line, "typeidentify", yytext);}\n"//".*  {}\n[/][*][^*]*[*]+([^*/][^*]*[*]+)*[/]       {}\n. {}\n%%\nint printmsg() {\n    if (error)\n        return 0;\n    p = m;\n    p = p->next;\n    while(p) {\n        printf("line%d:(%s, %s)\\n", p->line, p->token, p->word);\n        p = p->next;\n    }\n}\n\nint main() {\n    m = (pMsg)malloc(sizeof(Msg));\n    p = m;\n    yyin=stdin;\n    yylex();\n    printmsg();\n}\n')])])])])}),[],!1,null,null,null);e.default=i.exports}}]);